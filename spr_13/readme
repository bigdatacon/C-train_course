Подсказка:
Упростите поиск. Вектор — не самый удобный контейнер для этого. Также стоит улучшить метод REMOVE, ведь порядок чисел в контейнере неважен, а удалять числа из середины вектора — дорого. Будьте аккуратны с удалением значения из контейнера, содержащего один элемент.

   Задание
Задание
Вы попали на собеседование в компанию «Мечта, а не компания». Вам предлагают задачу, у которой есть наивное и оптимальное решения. Менеджеры компании «Мечта, а не компания» ждут, что вы не только быстро найдёте наивное решение, но и сможете его улучшить до оптимального.
Задача звучит так: «Разработайте дизайн и внедрите структуру данных, поддерживающую методы Insert, Remove, Has и GetRand. Метод Insert добавляет число в хранилище контейнера. Метод Remove удаляет число из хранилища. Метод Has отвечает на запрос, есть ли число-аргумент в контейнере. А метод GetRand возвращает пользователю случайное число из хранилища».
Перед вами наивное решение, которое вы, конечно же, успешно написали на первых минутах собеседования. Но сложность некоторых методов неоптимальна.
Формат входных данных
В первой строке вводится количество запросов Q — натуральное число, не превосходящее 10^6. В следующих Q строках в соответствии с описанным ниже форматом вводятся запросы. Гарантируется, что значения чисел, подающихся в запросах, не превосходят диапазона целых чисел int. Среди чисел, подающихся через запрос INSERT, нет дубликатов.
На вход программы подаются запросы:
INSERT val — по этому запросу число val должно быть добавлено в контейнер.
REMOVE val — число val должно быть удалено из контейнера.
HAS val — в ответ на этот запрос необходимо вывести true, если число содержится в контейнере, и false в противном случае.
RAND — в ответ на этот запрос выведите случайное число из контейнера.
Пример ввода:
10
INSERT 1
INSERT 2
INSERT 3
HAS 2
RAND
RAND
REMOVE 3
HAS 3
RAND
RAND 
Формат выходных данных
В соответствии с примером ввода, вывод может выглядеть следующим образом:
true
1
3
false
2
1 
Числа, которые выводит ваша программа в ответ на запрос RAND, могут отличаться от представленных выше. Но эти числа должны присутствовать в контейнере, то есть должны быть добавлены методом INSERT и не удалены запросом REMOVE.
Ограничения
Обработка всех запросов должна укладываться в одну секунду. Дубликатов среди добавляемых чисел нет, обрабатывать этот случай не нужно. 
В запросе REMOVE подаются только те числа, которые до этого были добавлены в контейнер методом INSERT.
Запрос HAS к пустому контейнеру должен отрабатывать корректно и печатать false. 
Запрос RAND к пустому контейнеру применяться не будет, проверять этот случай не нужно.
Пожалуйста, не меняйте метод GetRand. Он уже работает оптимально.
В функции main вызывается LOG_DURATION. Не меняйте этот код.
Что отправлять на проверку
Отправьте менеджерам компании «Мечта, а не компания» переработанное и ускоренное решение.
Как будет тестироваться ваш код
На вход программы будут подаваться запросы указанного формата, удовлетворяющие всем ограничениям. Порядок запросов не регламентирован. Кроме того, проверим, что на запрос RAND программа возвращает разные числа, а при очень большом количестве запросов RAND для небольшого контейнера, все числа контейнера появляются среди результатов.
