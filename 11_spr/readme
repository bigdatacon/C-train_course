Подсказка:
Чтобы узнать ширину и высоту Image, воспользуйтесь тем, что входные данные гарантируют одинаковую ширину строк. 
Высота изображения будет равна количеству строк в vector, а ширина — длине любой строки, например, первой. При нулевой высоте ширина тоже будет нулевая.
Воспользуйтесь готовой функцией IsPointInEllipse для проверки попадания точки внутрь эллипса. Для удобства напишите аналогичную функцию для
проверки попадания точки внутрь прямоугольника. Тесты в функции main помогут вам отладить ваше решение.

Задание
В этом задании вам предстоит испытать shared_ptr в действии и разработать приложение, позволяющее создавать композицию из размещённых на холсте фигур.
Должны поддерживаться два типа фигур — прямоугольники и эллипсы. И прямоугольник, и эллипс задаются координатами верхнего левого угла (ВЛУ), ограничивающего их прямоугольника, а также размерами.
Внутренняя область заполнена текстурой. Текстура — растровое изображение, заданное прямоугольным массивом «‎пикселей»‎ размером MxN, которые обладают некоторым цветом. При рисовании фигуры используется следующий принцип наложения текстуры на поверхность фигуры:
Верхнему левому углу фигуры соответствует верхний левый угол текстуры.
Один пиксель текстуры покрывает соответствующий пиксель изображения фигуры. То есть текстура рисуется в масштабе 1:1.
Если размеры фигуры больше размеров текстуры, пиксели фигуры, выходящие за границы правого и нижнего краёв текстуры, заполняются некоторым фиксированным цветом.
image
На рисунке показан процесс наложения текстуры с изображением пейзажа на прямоугольник и эллипс при рисовании фигур на холсте. Обратите внимание, что часть эллипса, выходящая за пределы текстуры, закрашена малиновым цветом.
В вашем распоряжении полностью готовый класс Canvas, управляющий фигурами на холсте, а также заготовки для классов Texture, представляющего текстуру, и класса Shape, представляющего фигуру. Файл common.h содержит объявления структур Size и Point, а также код функции IsPointInEllipse, которая поможет вам в рисовании эллипса.
Файл main.cpp содержит примеры использования этих классов и тесты, проверяющие корректность отрисовки фигур на холсте.
Так как это консольное приложение, для простоты реализации в качестве типа, задающего «цвет» пикселя, используется char, а изображение — это просто вектор строк одинаковой длины. Напишите недостающий код методов классов Shape и Texture, чтобы ваша программа успешно прошла все тесты. В качестве «цвета» области, выходящей за пределы текстуры, используйте символ ..
Требования к классам
Копия объекта Shape должна использовать тот же экземпляр класса Texture, что и оригинальная фигура.
Ограничения
Гарантируются следующие ограничения на значения некоторых типов:
Поля структуры Size находятся в диапазоне [0, 10'000];
Координаты структуры Point находятся в диапазоне от [-100'000, +100'000];
Все элементы вектора строк, использующегося в качестве типа Image, имеют одинаковую длину и содержат только символы с кодами в диапазоне [32, 127]. Это диапазон символов ASCII.
Размеры изображений могут быть нулевыми по любой из осей.
Что отправлять на проверку
Реализуйте недостающий функционал в файлах texture.h и shapes.h. Содержимое файла canvas.h изменять не нужно. Функция main будет заменена на версию из тренажёра.
Как будет тестироваться ваша программа
Тренажёр проверит работу классов Shape и Texture, а также различные сценарии работы с объектами холста.
