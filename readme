Задание
Метеостанция измеряет температуру определённое количество раз в течение дня. Каждый день измерения производятся в одно и то же время, и их количество одинаково. Данные, полученные в течение одного дня, сохраняются в виде вектора чисел float. В результате наблюдений в течение нескольких дней получается набор векторов типа vector<float>. Вычислите среднее значение измерений, сделанных в одно и то же время, но в разные дни. При этом учитывайте только положительные температуры.
Например, если наблюдения велись 30 дней, каждый день делалось по 1440 измерений, то на вход поступит 30 векторов по 1440 значений. Программа должна построить новый вектор из 1440 значений типа float, каждое из которых — среднее значение положительных температур за соответствующую минуту.
Реализуйте функцию ComputeAvgTemp. Она должна возвращать вектор, который содержит среднюю положительную температуру для каждого измерения. Если для какого-либо измерения все температуры неположительные, запишите для этого измерения ноль.
Количество измерений в день определите сами по размеру первого вектора. Для пустого набора верните пустой ответ. Гарантируется, что все векторы измерений имеют одинаковый размер.
Ваша реализация должна быть эффективна: правильно расположите вложенные циклы, избегайте if. Учтите, что деление чисел — тоже долгая операция, следует минимизировать количество делений.
Формат выходных данных
Функция ничего не должна выводить в потоки.
Ограничения
Ваша реализация должна быть эффективной по сложности и использованию кэша. Она не должна делать избыточных условных переходов и делений.
Что отправлять на проверку
Загрузите в тренажёр код, содержащий функцию ComputeAvgTemp. Функция main учитываться не будет.
Как будет тестироваться ваш код
Будет проверено, что функция ComputeAvgTemp работает правильно и эффективно.
Пример
void Test() {
    // 4 дня по 3 измерения
    vector<vector<float>> v = {
        {0, -1, -1},
        {1, -2, -2},
        {2, 3, -3},
        {3, 4, -4}
    };

    // среднее для 0-го измерения (1+2+3) / 3 = 2 (не учитывам 0)
    // среднее для 1-го измерения (3+4) / 2 = 3.5 (не учитывам -1, -2)
    // среднее для 2-го не определено (все температуры отрицательны), поэтому должен быть 0

    assert(ComputeAvgTemp(v) == vector<float>({2, 3.5f, 0}));
} 

Подсказка:
Чтобы создать литерал типа float, напишите после числа с точкой букву f. Либо целую, либо дробную часть можно опускать, если подразумевается ноль. Примеры литералов: 3.14f, -.2f, 20.f.
Напишите два вложенных цикла. Внешний будет пробегать по векторам, а внутренний — по измерениям. Внутри циклов используйте тернарные операторы, но не if.
Заведите два вектора — один для суммы положительных температур по каждому измерению, второй для их количества. Также вы можете использовать один вектор структур, содержащих два поля.
Таким образом, вы просуммируете все положительные измерения и получите их количество. Среднее — это отношение суммы к количеству. Выполните деление в конце, после того как посчитаете все суммы целиком.
Будьте внимательны: делить следует на количество положительных слагаемых, а не на количество всех дней.
Footer
© 2023 GitHub, Inc.
Footer navigation
Terms
Privacy
Security
Status
Docs
Contact GitHub
Pricing
API
Training
Blog
About
