Задание:
В прошлом уроке для парсинга строки вы использовали переменную pos, которая указывала на позицию начала слова. Избавьтесь от этой переменной и начните перемещать начало самого string_view.
Алгоритм будет выглядеть следующим образом:
Удалите начало из str до первого непробельного символа, воспользовавшись методом remove_prefix. Он уберёт из string_view указанное количество символов.
В цикле используйте метод find с одним параметром, чтобы найти номер позиции первого пробела.
Добавьте в результирующий вектор элемент string_view, полученный вызовом метода substr, где начальная позиция будет 0, а конечная — найденная позиция пробела или npos.
Сдвиньте начало str так, чтобы оно указывало на позицию за пробелом. Это можно сделать методом remove_prefix, передвигая начало str на указанное в аргументе количество позиций.
Условие цикла нужно изменить. Подумайте, каким именно оно должно быть.
Реализуйте функцию SplitIntoWordsView по описанному алгоритму. 
Как будет тестироваться ваш код
Проверим правильность разбиения и то, что код использует remove_prefix.

Подсказка:
Чтобы не удалить в методе remove_prefix больше символов, чем есть в строке, используйте алгоритм min: str.remove_prefix(min(str.size(), ...))
Цикл следует продолжать, пока строка str непуста. Можно найти инвариант: в начале итерации цикла str никогда не начинается с пробела.
Вернитесь к описанию алгоритма или откройте документацию для методов find и substr. Пока эти страницы есть только на английском.
