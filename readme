Задание
Задание
Перед вами шаблон с заготовками классов, структур и функций. Реализуйте их так, чтобы функция main из заготовки решала задачу «Автобусные остановки».
Как будет тестироваться ваша программа
Тренажёр проверит работу программы на тестах для задачи «Автобусные остановки».
Рекомендации
Выполняя декомпозицию программы, пишите модульные тесты на получающиеся классы и функции. Для модульного тестирования операций воспользуйтесь классами istringstream и ostringstream, как в примере:
#include <cassert>
Задание
Перед вами шаблон с заготовками классов, структур и функций. Реализуйте их так, чтобы функция main из заготовки решала задачу «Автобусные остановки».
Как будет тестироваться ваша программа
Тренажёр проверит работу программы на тестах для задачи «Автобусные остановки».
Рекомендации
Выполняя декомпозицию программы, пишите модульные тесты на получающиеся классы и функции. Для модульного тестирования операций воспользуйтесь классами istringstream и ostringstream, как в примере:
#include <cassert>
#include <iostream>
#include <sstream>
using namespace std;
struct Point {
    int x = 0;
    int y = 0;
};
ostream& operator<<(ostream& output, Point p) {
    output << p.x << ' ' << p.y;
    return output;
}
istream& operator>>(istream& input, Point& p) {
    input >> p.x >> p.y;
    return input;
}
void TestPointOutput() {
    Point p = {15, -8};
    ostringstream output;
    output << p;
    // Метод str() возвращает строку с содержимым, выведенным в ostringstream
    assert(output.str() == "15 -8"s);
}
void TestPointInput() {
    istringstream input;
    // Метод str(строка) у istringstream позволяет задать содержимое, которое будет считываться из istringstream
    input.str("-9 33"s);
    Point p;
    input >> p;
    assert(p.x == -9);
    assert(p.y == 33);
}
int main() {
    TestPointOutput();
    TestPointInput();
} 



Подсказка: 
На первом шаге реализуйте оператор чтения структуры Query, примените его и обновите исходный код функции main из теории. Убедитесь, что код по-прежнему работает.
Затем наполните внутренности структур AllBusesResponse, BusesForStopResponse и AllBusesResponse и перенесите логику обработки запросов из main в BusManager, оставив внутри main только ввод и вывод.
На последнем этапе реализуйте операторы вывода структур, приведя тело функции main к финальному варианту, который дан в заготовке кода.
