Подсказка : 
Ключи — целые числа. Так что операция взятия остатка от деления поможет вам выбрать, в подсловаре с каким индексом хранить данный ключ. Чтобы не мучиться с отрицательными числами, предварительно приведите ключ к типу uint64_t.
Задание
Задание
Напишите шаблонный класс ConcurrentMap со следующим интерфейсом:
template <typename Key, typename Value>
class ConcurrentMap {
public:
    static_assert(std::is_integral_v<Key>, "ConcurrentMap supports only integer keys"s);

    struct Access {
        Value& ref_to_value;

        // ...
    };

    explicit ConcurrentMap(size_t bucket_count);

    Access operator[](const Key& key);

    std::map<Key, Value> BuildOrdinaryMap();

private:
    // ...
}; 
static_assert в начале класса не даст программе скомпилироваться при попытке использовать в качестве типа ключа что-либо, кроме целых чисел.
Конструктор класса ConcurrentMap<Key, Value> принимает количество подсловарей, на которые надо разбить всё пространство ключей.
operator[] должен вести себя так же, как аналогичный оператор у map: если ключ key есть в словаре, должен возвращаться объект класса Access, содержащий ссылку на соответствующее ему значение. Если key в словаре нет, в него надо добавить пару (key, Value()) и вернуть объект класса Access, содержащий ссылку на только что добавленное значение.
Структура Access должна вести себя так же, как в шаблоне Synchronized: предоставлять ссылку на значение словаря и обеспечивать синхронизацию доступа к нему.
Метод BuildOrdinaryMap должен сливать вместе части словаря и возвращать весь словарь целиком. При этом он должен быть потокобезопасным, то есть корректно работать, когда другие потоки выполняют операции с ConcurrentMap.
В заготовке кода используются тесты на основе фреймворка test_framework.h, с которым вы уже знакомы. Для проверки решения на вашем компьютере загрузите этот фреймворк по ссылке из урока «mutex и lock_guard».
Ограничения
Ваш класс должен гарантировать потокобезопасную работу со словарём, как описано в условии. При этом он должен быть как минимум вдвое эффективнее обычного словаря с общим мьютексом.
Гарантируется, что тип Value имеет конструктор по умолчанию и конструктор копирования.
Что отправлять на проверку
cpp-файл, содержащий шаблонный класс ConcurrentMap, а также нужные для его работы подключения библиотек и другие функции. Ваша программа не должна содержать подстроку copy_if. Функция main будет проигнорирована при тестировании.
Как будет тестироваться ваш код
Пример тестов и бенчмарка вы найдёте в заготовке кода.
