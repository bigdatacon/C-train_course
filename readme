Подсказка : 
Используйте в классе HashableContainer одно поле типа vector<vector<T>>.
operator== для класса VehiclePlate должен проверять равенство всех компонентов номера.
При добавлении номера примените алгоритм find, чтобы выяснить, дублируется ли он.


Задание
Задание
Сделайте корзины более вместительными, чтобы в них можно было вставить несколько объектов и корректно обработать случай коллизий. Вместо optional используйте любой удобный контейнер. 
Повторные номера хранить не нужно. Чтобы избегать дубликатов, определите operator== для класса VehiclePlate.
Контейнер должен корректно работать не только для автомобильных номеров, но и для любых объектов, имеющих метод Hash и operator==.
Учтите, что количество номеров в одной корзинке будет в любом случае невелико, а вот самих корзинок достаточно много. Лучше использовать для хранения данных корзинки простой контейнер, например vector.
При печати номера́ выдавайте в соответствии с номерами корзинок, как в заготовке кода. Номера, попавшие в одну корзинку, выдайте в порядке их поступления в контейнер.
Обратите внимание: буквы в номерах латинские.
Ограничения
Единственное изменение, которое допускается для класса номера — добавление operator==.
Класс HashableContainer должен содержать только одно поля типа vector<S<T>>, где S — некоторый контейнер, выбранный на ваше усмотрение.
Примеры
int main() {
    HashableContainer<VehiclePlate> plate_base;
    plate_base.Insert({'B','H', 840, 'E', 99});
    plate_base.Insert({'O','K', 942, 'K', 78});
    plate_base.Insert({'O','K', 942, 'K', 78});
    plate_base.Insert({'O','K', 942, 'K', 78});
    plate_base.Insert({'O','K', 942, 'K', 78});
    plate_base.Insert({'H','E', 968, 'C', 79});
    plate_base.Insert({'T','A', 326, 'X', 83});
    plate_base.Insert({'H','H', 831, 'P', 116});
    plate_base.Insert({'A','P', 831, 'Y', 99});
    plate_base.Insert({'P','M', 884, 'K', 23});
    plate_base.Insert({'O','C', 34, 'P', 24});
    plate_base.Insert({'M','Y', 831, 'M', 43});
    plate_base.Insert({'B','P', 831, 'M', 79});
    plate_base.Insert({'K','T', 478, 'P', 49});
    plate_base.Insert({'X','P', 850, 'A', 50});

    plate_base.PrintAll(cout);
} 
Пример вывода:
OC034P24
TA326X83
KT478P49
HH831P116
AP831Y99
MY831M43
BP831M79
BH840E99
XP850A50
PM884K23
OK942K78
HE968C79 
Как будет тестироваться ваш код
Будет проверено, что:
контейнер выводит все номера, которые были в него добавлены,
контейнер не выводит номера повторно,
контейнер выводит номера в правильном порядке,
контейнер корректно работает для объектов другого типа,
равные номера определяются правильно,
вы не добавляли в класс контейнера новых полей,
вы не меняли класс номера.
