Задание
Задание
Разработайте класс StreamUntier, который выполняет следующие действия:
В конструкторе — «отвязывание» потока, переданного в конструктор как аргумент.
В деструкторе — «привязывание» того потока, который был отвязан.
В этом уроке вы столкнулись с указателями — объектами C++, которые изучите позже в курсе. Тип указателя содержит звёздочку. Вы видели такой тип в параметре main в уроке. Метод потока tie тоже оперирует с указателем — ostream*. Именно им был тип переменной tied_before, выведенный автоматически в выражении auto tied_before = cin.tie(nullptr);.
Интерфейс класса StreamUntier дан в заготовке кода. Добавьте конструктор, деструктор и, при необходимости, дополнительные поля.
Ограничения
Не меняйте название класса StreamUntier.
Пример
Пример использования класса — в функции main.
Что отправлять на проверку
Отправьте на проверку реализацию класса StreamUntier, которая отвязывает поток в конструкторе и привязывает обратно в деструкторе. Функция main будет игнорироваться.
Как будет тестироваться ваш код
Будет проверено, что StreamUntier выполняет свои функции: отвязывает в конструкторе и привязывает обратно в деструкторе. Причём в деструкторе привязывается именно тот поток, который был отвязан в конструкторе.

Подсказка:
Выполните stream.tie(nullptr) в конструкторе, сохранив возвращённое значение в поле tied_before_. Используйте его в деструкторе. Придётся также добавить поле класса типа istream& для того, чтобы сохранить сам stream.
