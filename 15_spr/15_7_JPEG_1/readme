libjpeg принимает строку изображения в виде указателя на массив элементов типа JSAMPLE. Для хранения конвертированных значений можно использовать временный буфер std::vector<JSAMPLE>.
Размер временного буфера должен вместить данные одной строки — в три раза превышать ширину изображения.
Первый пиксель строки используется для заполнения первых трёх элементов временного буфера — от нулевого до второго, второй — для элементов от третьего до пятого.
Конвертировать из byte в JSAMPLE можно через static_cast.

Расширьте ImgLib и реализуйте в ней функцию SaveJPEG записи изображения JPEG по аналогии с функцией write_JPEG_file из примера библиотеки.
Эта функция использует глобальные переменные:
extern JSAMPLE * image_buffer;    /* Points to large array of R,G,B-order data */
extern int image_height;    /* Number of rows in image */
extern int image_width;        /* Number of columns in image */ 
Нужно исключить их использование. Интерфейс функции должен соответствовать библиотеке ImgLib:
bool SaveJPEG(const Path& file, const Image& image); 
Файл примера библиотеки libjpeg:
example.c
Внесите в функцию правки.
Измените метод открытия файла. При компиляции под Visual Studio должна использоваться функция _wfopen вместо fopen.
Уберите вызов функции jpeg_set_quality.
Уберите слово struct при объявлении переменных. В C используется синтаксис struct jpeg_compress_struct cinfo, в C++ — просто jpeg_compress_struct cinfo.
Исключите использование глобальных переменных. Размеры и данные изображения нужно брать из параметра image.
Исключите диагностические сообщения, выводимые функцией fprintf.
При ошибке вместо вызова exit верните false.
В случае успеха возвратите true.
Исходный код функции из примера библиотеки libjpeg находится в функции SaveJPEG заготовки. Полностью поменяйте его.
Ограничения
Функция не должна использовать глобальные переменные.
Не меняйте сигнатуру функции.
Логика работы функции write_JPEG_file должна быть сохранена.
При компиляции под Visual Studio для открытия файла должна использоваться функция _wfopen вместо fopen.
Пример
В main.cpp находится программа для конвертации PPM в JPEG, которая использует нужную функцию.
image
Только что дочитавший книгу пёс сконвертирован из PPM в JPEG. В архиве ниже — результат. Используйте его, чтобы проверить свою программу.
readind_dog.zip
Что отправлять на проверку
Измените заготовку кода, реализовав в файле jpeg_image.cpp функцию SaveJPEG.
Как будет тестироваться ваш код
Мы проверим, что:
программа корректно конвертирует PPM в JPEG;
функция не использует глобальные переменные;
Под Visual Studio файлы открываются функцией _wfopen.
