Эту задачу можно решить, сделав EqualsToOneOf рекурсивной. Тогда каждый последующий вызов будет иметь дело с меньшим количеством аргументов.
Также функцию можно решить, используя свёртку параметров шаблона с операцией ||.

Задание 1
Напишите шаблонную функцию EqualsToOneOf, которая возвращает true, когда её первый аргумент равен хотя бы одному из последующих аргументов. В остальных случаях функция должна возвращать false. Если в функцию был передан только один параметр, она должна возвращать false.
Примеры:
EqualsToOneOf(1, 2, 3, 4) возвращает false. Первый параметр 1 не равен ни одному из последующих параметров.
EqualsToOneOf(1, 3, 1) возвращает true. Первый аргумент 1 равен третьему параметру.
bool IsExpectedAnswer(std::string_view answer) {
    using namespace std::literals;
    return EqualsToOneOf(answer, "yes"sv, "no"sv, "don't know"sv);
} 
Что отправлять на проверку
Исходный код функции EqualsToOneOf.
Как будет тестироваться ваш код
Тренажёр проверит работу функции EqualsToOneOf. Функция main будет заменена на версию из тренажёра.
