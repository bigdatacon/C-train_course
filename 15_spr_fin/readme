Разработайте proto-схему базы так, чтобы она исчерпывающе описывала автобусы и остановки, но при этом не хранила строковые названия дважды.

Задание 1
В этом и последующих заданиях нужно разделить программу, которая отвечает за наполнение транспортного справочника и обработку запросов к нему, на две:
Программа make_base: создание базы транспортного справочника по запросам base_requests и её сериализация в файл.
Программа process_requests: десериализация базы из файла и использование её для ответов на запросы stat_requests.
Полная функциональность справочника будет поддержана поэтапно. В этой задаче требуется сериализация лишь той части базы, которая нужна для ответа на запросы Bus и Stop. Сама функциональность должна соответствовать той, что была в девятом спринте. Рисовать карту и строить кратчайшие маршруты здесь не требуется.
Программа make_base
На вход программе make_base через стандартный поток ввода подаётся JSON со следующими ключами:
base_requests: запросы Bus и Stop на создание базы. Формат этих данных остаётся прежним.
routing_settings: настройки маршрутизации. Не используются в этой задаче, так как нет запросов на построение маршрута, но будут использоваться в следующих. Формат — прежний.
render_settings: настройки отрисовки. Не используются в этой задаче, так как нет запросов на построение маршрута и рисование карты, но будут использоваться в следующих. Формат — прежний.
serialization_settings: настройки сериализации. На текущий момент это словарь с единственным ключом file, которому соответствует строка — название файла. Именно в этот файл нужно сохранить сериализованную базу.
Задача программы make_base — построить базу и сериализовать её в файл с указанным именем. Выводить что-либо в стандартный поток вывода не требуется.
Программа process_requests
На вход программе process_requests подаётся файл с сериализованной базой (результат работы make_base), а также — через стандартный поток ввода — JSON со следующими ключами:
stat_requests: запросы Bus и Stop к готовой базе. Формат этих данных аналогичен предыдущим частям.
serialization_settings: настройки сериализации в формате, аналогичном этой же секции на входе make_base. А именно, в ключе file указывается название файла, из которого нужно считать сериализованную базу.
Программа process_requests должна вывести JSON с ответами на запросы — в том же формате, что и в предыдущих частях.
Пример 1
Ввод make_base
  {
      "serialization_settings": {
          "file": "transport_catalogue.db"
      },
      "base_requests": [
          {
              "is_roundtrip": true,
              "name": "297",
              "stops": [
                  "Biryulyovo Zapadnoye",
                  "Biryulyovo Tovarnaya",
                  "Universam",
                  "Biryulyovo Zapadnoye"
              ],
              "type": "Bus"
          },
          {
              "is_roundtrip": false,
              "name": "635",
              "stops": [
                  "Biryulyovo Tovarnaya",
                  "Universam",
                  "Prazhskaya"
              ],
              "type": "Bus"
          },
          {
              "latitude": 55.574371,
              "longitude": 37.6517,
              "name": "Biryulyovo Zapadnoye",
              "road_distances": {
                  "Biryulyovo Tovarnaya": 2600
              },
              "type": "Stop"
          },
          {
              "latitude": 55.587655,
              "longitude": 37.645687,
              "name": "Universam",
              "road_distances": {
                  "Biryulyovo Tovarnaya": 1380,
                  "Biryulyovo Zapadnoye": 2500,
                  "Prazhskaya": 4650
              },
              "type": "Stop"
          },
          {
              "latitude": 55.592028,
              "longitude": 37.653656,
              "name": "Biryulyovo Tovarnaya",
              "road_distances": {
                  "Universam": 890
              },
              "type": "Stop"
          },
          {
              "latitude": 55.611717,
              "longitude": 37.603938,
              "name": "Prazhskaya",
              "road_distances": {},
              "type": "Stop"
          }
      ],
      "render_settings": {
          "bus_label_font_size": 20,
          "bus_label_offset": [
              7,
              15
          ],
          "color_palette": [
              "green",
              [
                  255,
                  160,
                  0
              ],
              "red"
          ],
          "height": 200,
          "line_width": 14,
          "padding": 30,
          "stop_label_font_size": 20,
          "stop_label_offset": [
              7,
              -3
          ],
          "stop_radius": 5,
          "underlayer_color": [
              255,
              255,
              255,
              0.85
          ],
          "underlayer_width": 3,
          "width": 200
      },
      "routing_settings": {
          "bus_velocity": 40,
          "bus_wait_time": 6
      }
  }
   
Ввод process_requests
  {
      "serialization_settings": {
          "file": "transport_catalogue.db"
      },
      "stat_requests": [
          {
              "id": 1,
              "name": "297",
              "type": "Bus"
          },
          {
              "id": 2,
              "name": "635",
              "type": "Bus"
          },
          {
              "id": 3,
              "name": "Universam",
              "type": "Stop"
          }
      ]
  }
   
Вывод process_requests
  [
      {
          "curvature": 1.42963,
          "request_id": 1,
          "route_length": 5990,
          "stop_count": 4,
          "unique_stop_count": 3
      },
      {
          "curvature": 1.30156,
          "request_id": 2,
          "route_length": 11570,
          "stop_count": 5,
          "unique_stop_count": 3
      },
      {
          "buses": [
              "297",
              "635"
          ],
          "request_id": 3
      }
  ]
   
Пример 2
Ввод make_base
  {
      "serialization_settings": {
          "file": "transport_catalogue.db"
      },
      "base_requests": [
          {
              "is_roundtrip": true,
              "name": "297",
              "stops": [
                  "Biryulyovo Zapadnoye",
                  "Biryulyovo Tovarnaya",
                  "Universam",
                  "Biryusinka",
                  "Apteka",
                  "Biryulyovo Zapadnoye"
              ],
              "type": "Bus"
          },
          {
              "is_roundtrip": false,
              "name": "635",
              "stops": [
                  "Biryulyovo Tovarnaya",
                  "Universam",
                  "Biryusinka",
                  "TETs 26",
                  "Pokrovskaya",
                  "Prazhskaya"
              ],
              "type": "Bus"
          },
          {
              "is_roundtrip": false,
              "name": "828",
              "stops": [
                  "Biryulyovo Zapadnoye",
                  "TETs 26",
                  "Biryusinka",
                  "Universam",
                  "Pokrovskaya",
                  "Rossoshanskaya ulitsa"
              ],
              "type": "Bus"
          },
          {
              "latitude": 55.574371,
              "longitude": 37.6517,
              "name": "Biryulyovo Zapadnoye",
              "road_distances": {
                  "Biryulyovo Tovarnaya": 2600,
                  "TETs 26": 1100
              },
              "type": "Stop"
          },
          {
              "latitude": 55.587655,
              "longitude": 37.645687,
              "name": "Universam",
              "road_distances": {
                  "Biryulyovo Tovarnaya": 1380,
                  "Biryusinka": 760,
                  "Pokrovskaya": 2460
              },
              "type": "Stop"
          },
          {
              "latitude": 55.592028,
              "longitude": 37.653656,
              "name": "Biryulyovo Tovarnaya",
              "road_distances": {
                  "Universam": 890
              },
              "type": "Stop"
          },
          {
              "latitude": 55.581065,
              "longitude": 37.64839,
              "name": "Biryusinka",
              "road_distances": {
                  "Apteka": 210,
                  "TETs 26": 400
              },
              "type": "Stop"
          },
          {
              "latitude": 55.580023,
              "longitude": 37.652296,
              "name": "Apteka",
              "road_distances": {
                  "Biryulyovo Zapadnoye": 1420
              },
              "type": "Stop"
          },
          {
              "latitude": 55.580685,
              "longitude": 37.642258,
              "name": "TETs 26",
              "road_distances": {
                  "Pokrovskaya": 2850
              },
              "type": "Stop"
          },
          {
              "latitude": 55.603601,
              "longitude": 37.635517,
              "name": "Pokrovskaya",
              "road_distances": {
                  "Rossoshanskaya ulitsa": 3140
              },
              "type": "Stop"
          },
          {
              "latitude": 55.595579,
              "longitude": 37.605757,
              "name": "Rossoshanskaya ulitsa",
              "road_distances": {
                  "Pokrovskaya": 3210
              },
              "type": "Stop"
          },
          {
              "latitude": 55.611717,
              "longitude": 37.603938,
              "name": "Prazhskaya",
              "road_distances": {
                  "Pokrovskaya": 2260
              },
              "type": "Stop"
          },
          {
              "is_roundtrip": false,
              "name": "750",
              "stops": [
                  "Tolstopaltsevo",
                  "Rasskazovka"
              ],
              "type": "Bus"
          },
          {
              "latitude": 55.611087,
              "longitude": 37.20829,
              "name": "Tolstopaltsevo",
              "road_distances": {
                  "Rasskazovka": 13800
              },
              "type": "Stop"
          },
          {
              "latitude": 55.632761,
              "longitude": 37.333324,
              "name": "Rasskazovka",
              "road_distances": {},
              "type": "Stop"
          }
      ],
      "render_settings": {
          "bus_label_font_size": 20,
          "bus_label_offset": [
              7,
              15
          ],
          "color_palette": [
              "green",
              [
                  255,
                  160,
                  0
              ],
              "red"
          ],
          "height": 200,
          "line_width": 14,
          "padding": 30,
          "stop_label_font_size": 20,
          "stop_label_offset": [
              7,
              -3
          ],
          "stop_radius": 5,
          "underlayer_color": [
              255,
              255,
              255,
              0.85
          ],
          "underlayer_width": 3,
          "width": 200
      },
      "routing_settings": {
          "bus_velocity": 30,
          "bus_wait_time": 2
      }
  }
   
Ввод process_requests
  {
      "serialization_settings": {
          "file": "transport_catalogue.db"
      },
      "stat_requests": [
          {
              "id": 1,
              "name": "297",
              "type": "Bus"
          },
          {
              "id": 2,
              "name": "635",
              "type": "Bus"
          },
          {
              "id": 3,
              "name": "828",
              "type": "Bus"
          },
          {
              "id": 4,
              "name": "Universam",
              "type": "Stop"
          }
      ]
  }
   
Вывод process_requests
  [
      {
          "curvature": 1.36159,
          "request_id": 1,
          "route_length": 5880,
          "stop_count": 6,
          "unique_stop_count": 5
      },
      {
          "curvature": 1.12195,
          "request_id": 2,
          "route_length": 14810,
          "stop_count": 11,
          "unique_stop_count": 6
      },
      {
          "curvature": 1.31245,
          "request_id": 3,
          "route_length": 15790,
          "stop_count": 11,
          "unique_stop_count": 6
      },
      {
          "buses": [
              "297",
              "635",
              "828"
          ],
          "request_id": 4
      }
  ]
   
Пример 3
Ввод make_base
{
    "serialization_settings": {
        "file": "transport_catalogue.db"
    },
    "base_requests": [
        {
            "is_roundtrip": true,
            "name": "289",
            "stops": [
                "Zagorye",
                "Lipetskaya ulitsa 46",
                "Lipetskaya ulitsa 40",
                "Lipetskaya ulitsa 40",
                "Lipetskaya ulitsa 46",
                "Moskvorechye",
                "Zagorye"
            ],
            "type": "Bus"
        },
        {
            "latitude": 55.579909,
            "longitude": 37.68372,
            "name": "Zagorye",
            "road_distances": {
                "Lipetskaya ulitsa 46": 230
            },
            "type": "Stop"
        },
        {
            "latitude": 55.581441,
            "longitude": 37.682205,
            "name": "Lipetskaya ulitsa 46",
            "road_distances": {
                "Lipetskaya ulitsa 40": 390,
                "Moskvorechye": 12400
            },
            "type": "Stop"
        },
        {
            "latitude": 55.584496,
            "longitude": 37.679133,
            "name": "Lipetskaya ulitsa 40",
            "road_distances": {
                "Lipetskaya ulitsa 40": 1090,
                "Lipetskaya ulitsa 46": 380
            },
            "type": "Stop"
        },
        {
            "latitude": 55.638433,
            "longitude": 37.638433,
            "name": "Moskvorechye",
            "road_distances": {
                "Zagorye": 10000
            },
            "type": "Stop"
        }
    ],
    "render_settings": {
        "bus_label_font_size": 20,
        "bus_label_offset": [
            7,
            15
        ],
        "color_palette": [
            "green",
            [
                255,
                160,
                0
            ],
            "red"
        ],
        "height": 200,
        "line_width": 14,
        "padding": 30,
        "stop_label_font_size": 20,
        "stop_label_offset": [
            7,
            -3
        ],
        "stop_radius": 5,
        "underlayer_color": [
            255,
            255,
            255,
            0.85
        ],
        "underlayer_width": 3,
        "width": 200
    },
    "routing_settings": {
        "bus_velocity": 30,
        "bus_wait_time": 2
    }
} 
Ввод process_requests
  {
      "serialization_settings": {
          "file": "transport_catalogue.db"
      },
      "stat_requests": [
          {
              "id": 1,
              "name": "289",
              "type": "Bus"
          },
          {
              "id": 2,
              "name": "Lipetskaya ulitsa 46",
              "type": "Stop"
          },
          {
              "id": 3,
              "name": "Lipetskaya ulitsa 40",
              "type": "Stop"
          },
          {
              "id": 4,
              "name": "Moskvorechye",
              "type": "Stop"
          }
      ]
  }
   
Вывод process_requests
  [
      {
          "curvature": 1.63413,
          "request_id": 1,
          "route_length": 24490,
          "stop_count": 7,
          "unique_stop_count": 4
      },
      {
          "buses": [
              "289"
          ],
          "request_id": 2
      },
      {
          "buses": [
              "289"
          ],
          "request_id": 3
      },
      {
          "buses": [
              "289"
          ],
          "request_id": 4
      }
  ]
   
Ввод make_base
{
"serialization_settings": {
  "file": "transport_catalogue.db"
},
"base_requests": [
  {
      "is_roundtrip": true,
      "name": "289",
      "stops": [
          "Zagorye",
          "Lipetskaya ulitsa 46",
          "Lipetskaya ulitsa 40",
          "Lipetskaya ulitsa 40",
          "Lipetskaya ulitsa 46",
          "Moskvorechye",
          "Zagorye"
      ],
      "type": "Bus"
  },
  {
      "latitude": 55.579909,
      "longitude": 37.68372,
      "name": "Zagorye",
      "road_distances": {
          "Lipetskaya ulitsa 46": 230
      },
      "type": "Stop"
  },
  {
      "latitude": 55.581441,
      "longitude": 37.682205,
      "name": "Lipetskaya ulitsa 46",
      "road_distances": {
          "Lipetskaya ulitsa 40": 390,
          "Moskvorechye": 12400
      },
      "type": "Stop"
  },
  {
      "latitude": 55.584496,
      "longitude": 37.679133,
      "name": "Lipetskaya ulitsa 40",
      "road_distances": {
          "Lipetskaya ulitsa 40": 1090,
          "Lipetskaya ulitsa 46": 380
      },
      "type": "Stop"
  },
  {
      "latitude": 55.638433,
      "longitude": 37.638433,
      "name": "Moskvorechye",
      "road_distances": {
          "Zagorye": 10000
      },
      "type": "Stop"
  }
],
"render_settings": {
  "bus_label_font_size": 20,
  "bus_label_offset": [
      7,
      15
  ],
  "color_palette": [
      "green",
      [
          255,
          160,
          0
      ],
      "red"
  ],
  "height": 200,
  "line_width": 14,
  "padding": 30,
  "stop_label_font_size": 20,
  "stop_label_offset": [
      7,
      -3
  ],
  "stop_radius": 5,
  "underlayer_color": [
      255,
      255,
      255,
      0.85
  ],
  "underlayer_width": 3,
  "width": 200
},
"routing_settings": {
  "bus_velocity": 30,
  "bus_wait_time": 2
}
} 
Ввод process_requests
  {
      "serialization_settings": {
          "file": "transport_catalogue.db"
      },
      "stat_requests": [
          {
              "id": 1,
              "name": "289",
              "type": "Bus"
          },
          {
              "id": 2,
              "name": "Lipetskaya ulitsa 46",
              "type": "Stop"
          },
          {
              "id": 3,
              "name": "Lipetskaya ulitsa 40",
              "type": "Stop"
          },
          {
              "id": 4,
              "name": "Moskvorechye",
              "type": "Stop"
          }
      ]
  }
   
Вывод process_requests
  [
      {
          "curvature": 1.63413,
          "request_id": 1,
          "route_length": 24490,
          "stop_count": 7,
          "unique_stop_count": 4
      },
      {
          "buses": [
              "289"
          ],
          "request_id": 2
      },
      {
          "buses": [
              "289"
          ],
          "request_id": 3
      },
      {
          "buses": [
              "289"
          ],
          "request_id": 4
      }
  ]
   
В файле ниже - примеры случайно сгенерированных входных файлов и корректных выводов для них.
s14_part1_opentest.zip
Что отправлять на проверку
main.cpp: единственный файл с функцией main. В зависимости от переданного при запуске режима работает либо как make_base, либо как process_requests (см. заготовку кода).
Файл transport_catalogue.proto содержит message TransportCatalogue. Этот message может находиться в любом package на ваше усмотрение. TransportCatalogue описывает proto-схему для сериализуемой базы. transport_catalogue.proto может содержать и другие proto-сообщения, а также импортировать их из других proto-файлов.
CMakeLIsts.txt должен собирать бинарный файл transport_catalogue.
Прочие файлы .h и .cpp.
Как будет тестироваться ваш код
Схема проверки предыдущих версий транспортного справочника была следующей:
Запускается единственная программа, на вход подаётся большой JSON.
Проверяется, что вывод этой программы соответствует ожидаемому.
Теперь же происходит взаимодействие двух программ, что приводит к следующей схеме:
Запускается программа make_base (основной исполняемый файл с параметром make_base), на вход подаётся JSON с base_requests и общими настройками.
Проверяется полученный файл с сериализованной базой. А именно, проверяется возможность его десериализации с использованием proto-сообщения TransportCatalogue из transport_catalogue.proto, а также проверяется его размер: он не может превышать размер авторской версии сериализованной базы той же структуры более чем на 50 %. При превышении размера сериализованного файла вы получите соответствующий фидбэк.
Запускается программа process_requests (основной исполняемый файл с параметром process_requests), на вход подаётся JSON с stat_requests и serialization_settings. В указанном файле находится сериализованная база, полученная в п. 1 и проверенная в п. 2.
Проверяется, что вывод программы process_requests из п. 3 соответствует ожидаемому.
Ограничения
Не более 2000 запросов к make_base.
Не более 2000 запросов к process_requests.
Не более 100 остановок в маршруте.
20 секунд на работу make_base и 1 секунда на работу process_requests.
