Задание
Ваше первое задание — конвертировать координаты ячейки из программной позиции в её пользовательский индекс в таблице и обратно.
Индекс ячейки для пользователя состоит из двух частей:
строка из заглавных букв латинского алфавита, обозначающая столбец;
число, обозначающее порядковый номер строки.
На пересечении столбца и строки и находится ячейка.
Для пользователя строки нумеруются с 1, в программном представлении — с 0.
Реализация
Для работы с позициями мы объявили структуру Position в файле common.h. Она содержит поля int row и int col — номера строки и столбца ячейки в программном представлении. В будущем, когда мы реализуем саму таблицу, будем использовать её для доступа к ячейкам.
Реализуйте методы: 
Position Position::FromString(std::string_view str) — возвращает позицию, соответствующую индексу, заданному в str. Если индекс задан в неверном формате — “abc”, “111”, “12jfd” — или выходит за предельные значения, он не валиден. Тогда функция должна вернуть дефолтную позицию Position::NONE. Она объявлена в файле common.h и определена в файле structures.cpp как {-1, -1}.
bool IsValid() проверяет валидность позиции, то есть что ячейка (row, col) не выходит за ограничения ниже и что значения полей row и col неотрицательны. Position::NONE невалидна.
std::string ToString() возвращает строку — позицию в формате пользовательского индекса. Если позиция невалидна, метод должен вернуть пустую строку.
Ограничения
Для определённости положим, что количество строк и столбцов в таблице не превышает 16384. То есть предельная позиция ячейки — (16383, 16383) с индексом** “XFD16384”. Если позиция ячейки выходит за эти границы, то она не валидна по определению.
Пусть пользователь создал позицию в методе FromString("XYZ1"), а затем вызвал от неё метод ToString(). Метод должен вернуть пустую строку, потому что позиция, соответствующая индексу “XYZ1” невалидна. 
Не меняйте файлы common.h и main.cpp.
Пример
Если ячейка имеет индекс “А1”, то её позиция (0, 0).
“AB15” — (14, 27).
Что отправлять на проверку
Мы будем тестировать функционал, реализованный в файле structures.cpp.
Как будет тестироваться ваш код
В файле structures.cpp тесты проверят:
как программа переводит валидные позиции в индексы и обратно;
как программа определяет, что позиция невалидна.
